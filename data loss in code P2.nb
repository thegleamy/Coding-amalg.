(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     56880,       1263]
NotebookOptionsPosition[     55399,       1234]
NotebookOutlinePosition[     55919,       1252]
CellTagsIndexPosition[     55876,       1249]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
  "The", " ", "sum", " ", "of", " ", "all", " ", "values", " ", "beween", " ",
    "i"}], " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", " ", "infinity"}], " ", "to"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", " ", "infinity"}], " ", 
     RowBox[{"(", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "the", " ", "sum", " ", "of", " ", "all", " ", "values", " ", 
         "bewtween", " ", "l"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"0", "  ", "and", " ", "l"}], "=", 
         RowBox[{
          RowBox[{"infinity", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "the", " ", "integral", " ", "of", " ", "A", " ", "sub", " ", 
              "b", " ", "as", " ", "n", " ", "approaches", " ", "infinity", 
              " ", "over", " ", "the", " ", "value", " ", "of", " ", "x", " ",
               "at", " ", "point", " ", "0"}], ")"}], " ", "x", " ", "delta", 
            RowBox[{"(", 
             RowBox[{"x", " ", "sub", " ", "l"}], ")"}]}], " ", "]"}], 
          RowBox[{"Z", "^", 
           RowBox[{"(", "Rt", ")"}]}], " ", "sub", " ", "s"}]}]}], "}"}], 
      ")"}], " ", "sub", " ", "i"}], "=", 
    RowBox[{"Fsub", "*", "\[IndentingNewLine]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8188562725305448`*^9, 
  3.8188562995624847`*^9}},ExpressionUUID->"47e117c9-76d7-4115-8cfb-\
b92bb124d269"],

Cell["\<\
The sum of all values beween i = - infinity to = + infinity ({the sum of all \
values bewtween l = 0  and l=infinity[(the integral of A sub b as n \
approaches infinity over the value of x at point 0) x delta(x sub l) ]Z^(Rt) \
sub s}) sub i=Fsub*
\
\>", "WolframAlphaShort",
 CellChangeTimes->{
  3.8188563335717096`*^9},ExpressionUUID->"2a430a74-8854-4d89-95e3-\
42be11ddb5e8"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryNoResults",
  DynamicModuleBox[{Typeset`q$$ = "Fsub* = y", Typeset`newq$$ = 
   RowBox[{"Fsub", "*", " "}]}, 
   FrameBox[
    TagBox[GridBox[{
       {
        InputFieldBox[Dynamic[Typeset`newq$$], String,
         Appearance->None,
         BaseStyle->{"CalculateInput"},
         ContinuousAction->True,
         Enabled->True,
         FieldSize->{{1, 40}, {1, 
            DirectedInfinity[1]}},
         TrapSelection->False], "\[SpanFromLeft]"},
       {
        StyleBox[
         TemplateBox[{"\"(\"", 
           DynamicBox[
            ToBoxes[
             FEPrivate`FrontEndResource["WAStrings", "NoInterpretations"], 
             StandardForm]], "\")\""},
          "RowDefault"], "DialogStyle",
         StripOnInput->False,
         FontColor->GrayLevel[0.5]], 
        TagBox[
         TooltipBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "WABitmaps", "QuestionMarkSmallIcon"],
            ImageSizeCache->{15., {5., 10.}}],
           Appearance->None,
           BaseStyle->{ShowStringCharacters -> False},
           ButtonFunction:>(Quiet[
              WolframAlpha[]]; 
            WolframAlphaClient`Private`openSuggestionsDialog[
             "NoResults", "Fsub* = y"]),
           Evaluator->Automatic,
           Method->"Preemptive"],
          "\"Information, tips and feedback\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Information, tips and feedback", "Tooltip"]& ]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      FrameStyle->GrayLevel[0.85],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxDividers->{
       "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"],
    Alignment->Top,
    Background->Dynamic[
      FEPrivate`If[
       FEPrivate`And[
        FEPrivate`SameQ[
         FEPrivate`Head[Typeset`newq$$], String], 
        FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
       RGBColor[1., 0.975, 0.95], 
       GrayLevel[1]]],
    BaselinePosition->Baseline,
    FrameStyle->GrayLevel[0.85],
    ImageSize->Automatic,
    RoundingRadius->5,
    StripOnInput->False],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[1]:=",ExpressionUUID->"9a8b2441-9819-443d-b3e3-c6d6afb4e664"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicModuleBox[{Typeset`querydata$$ = Association[
  "query" -> 
   "[Integral of F(Asubb,Xsubl)sub-i]+[F(Asubb,Xsubl)sub0] + [Integral of \
F(Asubb,Xsubl)sub|i|]=y", "assumptions" -> {}, "parse" -> Failure["NoParse", 
     Association[
     "Query" -> 
      "[Integral of F(Asubb,Xsubl)sub-i]+[F(Asubb,Xsubl)sub0] + [Integral of \
F(Asubb,Xsubl)sub|i|]=(Fsub*)=y"]], "inputpredictions" -> {}, 
   "otherpredictions" -> {}, "allassumptions" -> {}, "summarizeassumptions" -> 
   FrontEnd`SuppressEvaluationHash[Automatic], "summarizepredictions" -> 
   FrontEnd`SuppressEvaluationHash[True]], Typeset`update$$ = 
  FrontEnd`SuppressEvaluationHash[2]}, 
  DynamicBox[ToBoxes[
    AlphaIntegration`NaturalLanguageInputBoxes[
    1, Typeset`querydata$$, Typeset`update$$], StandardForm],
   ImageSizeCache->{1032., {13.5, 21.5}},
   TrackedSymbols:>{}],
  BaseStyle->{Deployed -> True},
  DynamicModuleValues:>{}]], "DeployedNLInput",
 PrivateCellOptions->{
 "CellSettings"->Association[
  "HideDetails" -> FrontEnd`SuppressEvaluationHash[False]]},
 CellLabel->"In[12]:=",ExpressionUUID->"9d3e9ec0-b878-4f58-992c-f2adddf6b425"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     DynamicBox[FEPrivate`FrontEndResource["WABitmaps", "WAErrorIndicator"],
      ImageSizeCache->{16., {3.1999999999999993`, 12.8}}], 
     StyleBox["\<\"No Wolfram Language translation found.\"\>",
      Deployed->False,
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0.3}}}],
  "Grid"]], "DeployedWLInput", "NaturalLanguageFailure",
 CellChangeTimes->{
  3.818857098822355*^9},ExpressionUUID->"09191f3a-288a-44e7-8269-\
7006b51406ac"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.818856498587542*^9, 3.8188564992892*^9}, {
  3.8188565352170825`*^9, 
  3.818856537425118*^9}},ExpressionUUID->"df7e7a3a-ca3d-43f8-b3d0-\
16e259df2dfd"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "graph [Integral of F(Asubb,Xsubl)sub-i]+[F(Asubb,Xsubl)sub0] + [Integral \
of F(Asubb,Xsubl)sub|i|]=(Fsub*)=y", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    InputAssumptions -> {"{\"C\", \"integral\"} -> {\"MathWorld\"}"}, 
    Method -> {
     "ExtrusionChosen" -> {
       "SubjectPod:MathWorldData", "Subject classifications", 1, 1, "Input", 
        "Entity[\"MathWorld\", \"Integral\"][EntityProperty[\"MathWorld\", \
\"MathWorldSubject\"]]"}, "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}, 
    PodStates -> {"SubjectPod:MathWorldData__Show details"}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Entity[\"MathWorld\", \"Integral\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               TagBox["\"integral\"", 
                Global`TagBoxWrapper[
                "Entity" -> {Global`MathWorldData, "Integral"}]], Identity], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Illustration", "scanner" -> "Data", "id" -> 
     "ImagePod:MathWorldData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "0", "async" -> 
     "https://www5a.wolframalpha.com/api/v1/asyncPod.jsp?id=\
MSPa50481i0d656eeh8f94hf00004e900c5g93i9a4f86722622586989336498", 
     "asyncfailed" -> "data not found"}, {
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Alternate name", "scanner" -> "Data", "id" -> 
     "AlternateNamesPod:MathWorldData", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"MathWorld\", \"Integral\"][EntityProperty[\"MathWorld\", \
\"AlternateNames\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"primitive function\"", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Basic definition", "scanner" -> "Data", "id" -> 
     "BasicDefinitionPod:MathWorldData", "position" -> "400", "error" -> 
     "false", "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"MathWorld\", \"Integral\"][EntityProperty[\"MathWorld\", \
\"BasicDefinitions\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 
                 TemplateBox[{
                  "\"An\"", "\" \"", "\"integral\"", "\" \"", "\"is\"", 
                   "\" \"", "\"a\"", "\" \"", "\"mathematical\"", "\" \"", 
                   "\"object\"", "\" \"", "\"that\"", "\" \"", "\"can\"", 
                   "\" \"", "\"be\"", "\" \"", "\"interpreted\"", "\" \"", 
                   "\"as\"", "\" \"", "\"an\"", "\" \"", "\"area\"", "\" \"", 
                   "\"or\"", "\" \"", "\"a\"", "\" \"", "\"generalization\"", 
                   "\" \"", "\"of\"", "\" \"", "\"area.\"", "\" \"", 
                   "\"Integrals\"", "\" \"", "\"and\"", "\" \"", 
                   "\"derivatives\"", "\" \"", "\"are\"", "\" \"", "\"the\"", 
                   "\" \"", "\"fundamental\"", "\" \"", "\"objects\"", 
                   "\" \"", "\"of\"", "\" \"", "\"calculus.\""}, 
                  "RowDefault"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{{Top}, {Bottom}}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {
                "Columns" -> None, "Rows" -> {{True}}, 
                 "ItemsIndexed" -> {{{1, -1}, {1, -1}} -> None}}, 
               GridBoxItemSize -> {"Columns" -> {Automatic}}, 
               GridBoxSpacings -> {"Columns" -> {0.6, 0}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Detailed definition", "scanner" -> "Data", "id" -> 
     "DefinitionPod:MathWorldData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"MathWorld\", \"Integral\"][EntityProperty[\"MathWorld\", \
\"TypesetDescription\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                Cell[
                 
                 TextData[{
                  "The term \[OpenCurlyDoubleQuote]integral\
\[CloseCurlyDoubleQuote] can refer to a number of different concepts in \
mathematics. The most common meaning is the the fundamenetal object of \
calculus corresponding to summing infinitesimal pieces to find the content of \
a continuous region. Other uses of \[OpenCurlyDoubleQuote]integral\
\[CloseCurlyDoubleQuote] include values that always take on integer values \
(e.g., integral drawing, integral graph), mathematical objects for which \
integers form basic examples (e.g., integral domain), and particular values \
of an equation (e.g., integral curve), "}], LineSpacing -> {1, 3}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              BaseStyle -> {AutoMultiplicationSymbol -> False}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemStyle -> {"Columns" -> {{
                   Directive[SpanMaxSize -> DirectedInfinity[1]]}}, 
                "Rows" -> {{
                   Directive[SpanMaxSize -> DirectedInfinity[1]]}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More details", "input" -> 
         "DefinitionPod:MathWorldData__More details"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Integral.html", "text" -> 
           "More information"}, {}]}]}]}], Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Related terms", "scanner" -> "Data", "id" -> 
     "RelatedTermsPod:MathWorldData", "position" -> "600", "error" -> "false",
      "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"MathWorld\", \"Integral\"][EntityProperty[\"MathWorld\", \
\"RelatedEntries\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"Abelian integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "AbelianIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"A\[Hyphen]integrable\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "A-Integrable"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"calculus\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "Calculus"}]], Identity],
                 TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Chebyshev\[Hyphen]Gauss quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "Chebyshev-GaussQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Chebyshev quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "ChebyshevQuadrature"}]],
                  Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Darboux integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "DarbouxIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"definite integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "DefiniteIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Denjoy integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "DenjoyIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"derivative\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "Derivative"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"differential geometry\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "DifferentialGeometry"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"differential k\[Hyphen]form\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "Differentialk-Form"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"double integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "DoubleIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Euler integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "EulerIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"form integration\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "FormIntegration"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"fundamental theorem of Gaussian quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, 
                    "FundamentalTheoremofGaussianQuadrature"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Gaussian quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "GaussianQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Gauss\[Hyphen]Jacobi mechanical quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, 
                    "Gauss-JacobiMechanicalQuadrature"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Haar integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "HaarIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Hermite\[Hyphen]Gauss quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "Hermite-GaussQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"indefinite integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "IndefiniteIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"integral calculus\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "IntegralCalculus"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"integration\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "Integration"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Jacobi\[Hyphen]Gauss quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "Jacobi-GaussQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Laguerre\[Hyphen]Gauss quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "Laguerre-GaussQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Lebesgue integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "LebesgueIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Lebesgue\[Hyphen]Stieltjes integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "Lebesgue-StieltjesIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Legendre\[Hyphen]Gauss quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "Legendre-GaussQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Leibniz integral rule\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "LeibnizIntegralRule"}]],
                  Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Lobatto quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "LobattoQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"multiple integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "MultipleIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"nested function\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "NestedFunction"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Newton\[Hyphen]Cotes formulas\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "Newton-CotesFormulas"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"numerical integration\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "NumericalIntegration"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Perron integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "PerronIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "Quadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Radau quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "RadauQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"recursive monotone stable quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, 
                    "RecursiveMonotoneStableQuadrature"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"repeated integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "RepeatedIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Riemann integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "RiemannIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Romberg integration\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "RombergIntegration"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"singular integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "SingularIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Stieltjes integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "StieltjesIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Stokes\[CloseCurlyQuote] theorem\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "StokesTheorem"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"triple integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "TripleIntegral"}]], 
                 Identity], TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Educational grade level", "scanner" -> "Data", "id" -> 
     "EducationPod:MathWorldData", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TagBox[
               TagBox["\"college level\"", 
                Global`TagBoxWrapper[
                "EntityClass" -> {Global`MathWorldData, "CollegeLevel"}]], 
               Identity], "\" \"", 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{
                   TagBox[
                    TagBox["\"AP calculus AB\"", 
                    Global`TagBoxWrapper[
                    "EntityClass" -> {Global`MathWorldData, "APCalculusAB"}]],
                     Identity], "\"\[NoBreak], \"", 
                   TagBox[
                    TagBox["\"California calculus standard\"", 
                    Global`TagBoxWrapper[
                    "EntityClass" -> {
                    Global`MathWorldData, "CaliforniaCalculus"}]], Identity]},
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Subject classifications", "scanner" -> "Data", "id" -> 
     "SubjectPod:MathWorldData", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> "MathWorld"}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"MathWorld\", \"Integral\"][EntityProperty[\"MathWorld\", \
\"MathWorldSubject\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                 "Calculus and Analysis > Calculus > Integrals > Definite \
Integrals"], 
                 TextCell[
                 "Calculus and Analysis > Calculus > Integrals > Definite \
Integrals"]]}, {
                InterpretationBox[
                 Cell[
                 "Calculus and Analysis > Calculus > Integrals > Indefinite \
Integrals"], 
                 TextCell[
                 "Calculus and Analysis > Calculus > Integrals > Indefinite \
Integrals"]]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, BaseStyle -> 
              Directive[FontFamily -> "Helvetica", 10], DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide details", "input" -> 
         "SubjectPod:MathWorldData__Hide details"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "integral", "template" -> 
        "Assuming \"integral\" is referring to a mathematical \
definition${separator}Use as ${desc} or ${desc} or ${desc} or ${desc} or \
${desc} instead", "count" -> "6", "pulldown" -> "false", "default" -> 
        "{\"C\", \"integral\"} -> {\"MathWorld\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "MathWorld", "desc" -> 
          " referring to a mathematical definition", "input" -> 
          "{\"C\", \"integral\"} -> {\"MathWorld\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Calculator", "desc" -> "a computation", "input" -> 
          "{\"C\", \"integral\"} -> {\"Calculator\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "ExamplePage", "desc" -> "a general topic", "input" -> 
          "{\"C\", \"integral\"} -> {\"ExamplePage\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Character", "desc" -> "a character", "input" -> 
          "{\"C\", \"integral\"} -> {\"Character\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "{\"C\", \"integral\"} -> {\"Word\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "NetworkService", "desc" -> "a network service", "input" -> 
          "{\"C\", \"integral\"} -> {\"NetworkService\"}"}, {}]}]}], 
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "integral", "score" -> "0.07476635514018691", "level" -> 
        "low"}, {}]}]}, Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[
   True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "8", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "10.145", 
    "parsetiming" -> "0.14300000000000002", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSP50471i0d656eeh8f94hf000010368b1dfad6f46b", "host" -> 
    "https://www5a.wolframalpha.com", "server" -> "28", "related" -> "", 
    "version" -> "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -8., 
    "Date" -> {2021, 1, 5, 9, 42, 31.8017509`9.25502593607761}, "Line" -> 16, 
    "SessionID" -> 24265935231607062295}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6, 7, 8}, Typeset`failedpods$$ = {2}, Typeset`chosen$$ = {
   "SubjectPod:MathWorldData", "Subject classifications", 1, 1, "Input", 
    "Entity[\"MathWorld\", \"Integral\"][EntityProperty[\"MathWorld\", \
\"MathWorldSubject\"]]"}, Typeset`open$$ = True, Typeset`newq$$ = 
   "graph [Integral of F(Asubb,Xsubl)sub-i]+[F(Asubb,Xsubl)sub0] + [Integral \
of F(Asubb,Xsubl)sub|i|]=(Fsub*)=y"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{560., {1443., 17.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[13]:=",ExpressionUUID->"0538555b-330e-4c89-90dc-800155577449"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"f", 
       RowBox[{"(", 
        RowBox[{"x", ",", "y", ",", "z"}], ")"}]}], ")"}], " ", "x"}], " ", 
    "=", " ", "asubn"}]}], ",", " ", 
  RowBox[{"y", " ", "=", " ", 
   RowBox[{"x", " ", "subl"}]}], ",", " ", 
  RowBox[{"z", "=", "i"}]}], "\[IndentingNewLine]", 
 RowBox[{"graph", " ", "y"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.81885801925661*^9, 
  3.8188580969850693`*^9}},ExpressionUUID->"1469b03d-1e17-454d-a2ac-\
a40a4f75c573"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"f", 
       RowBox[{"(", 
        RowBox[{"x", ",", "y", ",", "z"}], ")"}]}], ")"}], " ", "x"}], " ", 
    "=", " ", "asubn"}]}], ",", " ", 
  RowBox[{"y", " ", "=", " ", 
   RowBox[{"x", " ", "subl"}]}], ",", " ", 
  RowBox[{"z", "=", "i"}]}], "\[IndentingNewLine]", 
 RowBox[{"graph", " ", "y"}]}], "Input",
 CellChangeTimes->{{3.8188572271321115`*^9, 3.8188572710270576`*^9}, {
  3.818858108298458*^9, 3.818858112824458*^9}},
 NumberMarks->False,ExpressionUUID->"560c8050-f882-4a0f-bf94-8c229eacb6ed"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
    TemplateBox[{
      GraphicsBox[{}, {
       DefaultBaseStyle -> {"CanvasGraphics"}, ImageSize -> Medium, PlotRange -> 
        1}]}, "CanvasFrame"]},
   "Canvas"], TraditionalForm]], "Input",
 CellChangeTimes->{{3.8188581947024975`*^9, 
  3.818858228616186*^9}},ExpressionUUID->"c96525d9-2689-4e7f-ab1e-\
a93fcbc91014"]
}, Open  ]]
},
WindowSize->{1142.7, 524.4},
WindowMargins->{{21.3, Automatic}, {Automatic, 30.599999999999998`}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8fbb3e11-9302-489d-af06-4ff611b931d1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1432, 36, 124, "Input",ExpressionUUID->"47e117c9-76d7-4115-8cfb-b92bb124d269"],
Cell[1993, 58, 389, 9, 62, "WolframAlphaShort",ExpressionUUID->"2a430a74-8854-4d89-95e3-42be11ddb5e8"],
Cell[2385, 69, 2520, 71, 65, "WolframAlphaShortInput",ExpressionUUID->"9a8b2441-9819-443d-b3e3-c6d6afb4e664"],
Cell[CellGroupData[{
Cell[4930, 144, 1141, 23, 52, "DeployedNLInput",ExpressionUUID->"9d3e9ec0-b878-4f58-992c-f2adddf6b425"],
Cell[6074, 169, 642, 16, 35, "DeployedWLInput",ExpressionUUID->"09191f3a-288a-44e7-8269-7006b51406ac"]
}, Open  ]],
Cell[6731, 188, 201, 4, 28, "Input",ExpressionUUID->"df7e7a3a-ca3d-43f8-b3d0-16e259df2dfd"],
Cell[6935, 194, 46880, 987, 1477, "WolframAlphaShortInput",ExpressionUUID->"0538555b-330e-4c89-90dc-800155577449"],
Cell[53818, 1183, 564, 16, 67, InheritFromParent,ExpressionUUID->"1469b03d-1e17-454d-a2ac-a40a4f75c573"],
Cell[CellGroupData[{
Cell[54407, 1203, 609, 16, 48, "Input",ExpressionUUID->"560c8050-f882-4a0f-bf94-8c229eacb6ed"],
Cell[55019, 1221, 364, 10, 385, InheritFromParent,ExpressionUUID->"c96525d9-2689-4e7f-ab1e-a93fcbc91014"]
}, Open  ]]
}
]
*)

