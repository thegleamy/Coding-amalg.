(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     91584,       1850]
NotebookOptionsPosition[     90001,       1820]
NotebookOutlinePosition[     90521,       1838]
CellTagsIndexPosition[     90478,       1835]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
  "The", " ", "sum", " ", "of", " ", "all", " ", "values", " ", "beween", " ",
    "i"}], " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", " ", "infinity"}], " ", "to"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", " ", "infinity"}], " ", 
     RowBox[{"(", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "the", " ", "sum", " ", "of", " ", "all", " ", "values", " ", 
         "bewtween", " ", "l"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"0", "  ", "and", " ", "l"}], "=", 
         RowBox[{
          RowBox[{"infinity", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "the", " ", "integral", " ", "of", " ", "A", " ", "sub", " ", 
              "b", " ", "as", " ", "n", " ", "approaches", " ", "infinity", 
              " ", "over", " ", "the", " ", "value", " ", "of", " ", "x", " ",
               "at", " ", "point", " ", "0"}], ")"}], " ", "x", " ", "delta", 
            RowBox[{"(", 
             RowBox[{"x", " ", "sub", " ", "l"}], ")"}]}], " ", "]"}], 
          RowBox[{"Z", "^", 
           RowBox[{"(", "Rt", ")"}]}], " ", "sub", " ", "s"}]}]}], "}"}], 
      ")"}], " ", "sub", " ", "i"}], "=", 
    RowBox[{"Fsub", "*", "\[IndentingNewLine]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8188562725305448`*^9, 
  3.8188562995624847`*^9}},ExpressionUUID->"47e117c9-76d7-4115-8cfb-\
b92bb124d269"],

Cell["\<\
The sum of all values beween i = - infinity to = + infinity ({the sum of all \
values bewtween l = 0  and l=infinity[(the integral of asubn as n approaches \
infinity over the value of x at point 0) x delta(x sub l) ]Z^(Rt) sub s}) sub \
i=Fsub*
\
\>", "WolframAlphaShort",
 CellChangeTimes->{
  3.8188563335717096`*^9, {3.8188584445105867`*^9, 
   3.818858452598974*^9}},ExpressionUUID->"2a430a74-8854-4d89-95e3-\
42be11ddb5e8"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryNoResults",
  DynamicModuleBox[{Typeset`q$$ = "Fsub* = y", Typeset`newq$$ = 
   RowBox[{"Fsub", "*", " "}]}, 
   FrameBox[
    TagBox[GridBox[{
       {
        InputFieldBox[Dynamic[Typeset`newq$$], String,
         Appearance->None,
         BaseStyle->{"CalculateInput"},
         ContinuousAction->True,
         Enabled->True,
         FieldSize->{{1, 40}, {1, 
            DirectedInfinity[1]}},
         TrapSelection->False], "\[SpanFromLeft]"},
       {
        StyleBox[
         TemplateBox[{"\"(\"", 
           DynamicBox[
            ToBoxes[
             FEPrivate`FrontEndResource["WAStrings", "NoInterpretations"], 
             StandardForm]], "\")\""},
          "RowDefault"], "DialogStyle",
         StripOnInput->False,
         FontColor->GrayLevel[0.5]], 
        TagBox[
         TooltipBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "WABitmaps", "QuestionMarkSmallIcon"],
            ImageSizeCache->{15., {5., 10.}}],
           Appearance->None,
           BaseStyle->{ShowStringCharacters -> False},
           ButtonFunction:>(Quiet[
              WolframAlpha[]]; 
            WolframAlphaClient`Private`openSuggestionsDialog[
             "NoResults", "Fsub* = y"]),
           Evaluator->Automatic,
           Method->"Preemptive"],
          "\"Information, tips and feedback\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Information, tips and feedback", "Tooltip"]& ]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      FrameStyle->GrayLevel[0.85],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxDividers->{
       "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"],
    Alignment->Top,
    Background->Dynamic[
      FEPrivate`If[
       FEPrivate`And[
        FEPrivate`SameQ[
         FEPrivate`Head[Typeset`newq$$], String], 
        FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
       RGBColor[1., 0.975, 0.95], 
       GrayLevel[1]]],
    BaselinePosition->Baseline,
    FrameStyle->GrayLevel[0.85],
    ImageSize->Automatic,
    RoundingRadius->5,
    StripOnInput->False],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[1]:=",ExpressionUUID->"9a8b2441-9819-443d-b3e3-c6d6afb4e664"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicModuleBox[{Typeset`querydata$$ = Association[
  "query" -> 
   "[Integral of F(asubb,xsubl)sub-i]+[F(asubb,xsubl)sub0] + [Integral of \
F(asubb,xsubl)sub|i|]=y", "assumptions" -> {}, "parse" -> Failure["NoParse", 
     Association[
     "Query" -> 
      "[Integral of F(Asubb,Xsubl)sub-i]+[F(Asubb,Xsubl)sub0] + [Integral of \
F(Asubb,Xsubl)sub|i|]=(Fsub*)=y"]], "inputpredictions" -> {}, 
   "otherpredictions" -> {}, "allassumptions" -> {}, "summarizeassumptions" -> 
   FrontEnd`SuppressEvaluationHash[Automatic], "summarizepredictions" -> 
   FrontEnd`SuppressEvaluationHash[True]], Typeset`update$$ = 
  FrontEnd`SuppressEvaluationHash[2]}, 
  DynamicBox[ToBoxes[
    AlphaIntegration`NaturalLanguageInputBoxes[
    1, Typeset`querydata$$, Typeset`update$$], StandardForm],
   ImageSizeCache->{1031., {13.5, 21.5}},
   TrackedSymbols:>{}],
  BaseStyle->{Deployed -> True},
  DynamicModuleValues:>{}]], "DeployedNLInput",
 PrivateCellOptions->{
 "CellSettings"->Association[
  "HideDetails" -> FrontEnd`SuppressEvaluationHash[False]]},
 CellLabel->"In[12]:=",ExpressionUUID->"9d3e9ec0-b878-4f58-992c-f2adddf6b425"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     DynamicBox[FEPrivate`FrontEndResource["WABitmaps", "WAErrorIndicator"],
      ImageSizeCache->{16., {3.1999999999999993`, 12.8}}], 
     StyleBox["\<\"No Wolfram Language translation found.\"\>",
      Deployed->False,
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0.3}}}],
  "Grid"]], "DeployedWLInput", "NaturalLanguageFailure",
 CellChangeTimes->{
  3.818857098822355*^9},ExpressionUUID->"09191f3a-288a-44e7-8269-\
7006b51406ac"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.818856498587542*^9, 3.8188564992892*^9}, {
  3.8188565352170825`*^9, 
  3.818856537425118*^9}},ExpressionUUID->"df7e7a3a-ca3d-43f8-b3d0-\
16e259df2dfd"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "graph [Integral of F(Asubb,Xsubl)sub-i]+[F(Asubb,Xsubl)sub0] + [Integral \
of F(Asubb,Xsubl)sub|i|]=(Fsub*)=y", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    InputAssumptions -> {"{\"C\", \"integral\"} -> {\"MathWorld\"}"}, 
    Method -> {
     "ExtrusionChosen" -> {
       "RelatedTermsPod:MathWorldData", "Related terms", 1, 1, "Content"}, 
      "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}, 
    PodStates -> {"SubjectPod:MathWorldData__Show details"}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Entity[\"MathWorld\", \"Integral\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               TagBox["\"integral\"", 
                Global`TagBoxWrapper[
                "Entity" -> {Global`MathWorldData, "Integral"}]], Identity], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Illustration", "scanner" -> "Data", "id" -> 
     "ImagePod:MathWorldData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "0", "async" -> 
     "https://www5a.wolframalpha.com/api/v1/asyncPod.jsp?id=\
MSPa50481i0d656eeh8f94hf00004e900c5g93i9a4f86722622586989336498", 
     "asyncfailed" -> "data not found"}, {
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Alternate name", "scanner" -> "Data", "id" -> 
     "AlternateNamesPod:MathWorldData", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"MathWorld\", \"Integral\"][EntityProperty[\"MathWorld\", \
\"AlternateNames\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"primitive function\"", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Basic definition", "scanner" -> "Data", "id" -> 
     "BasicDefinitionPod:MathWorldData", "position" -> "400", "error" -> 
     "false", "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"MathWorld\", \"Integral\"][EntityProperty[\"MathWorld\", \
\"BasicDefinitions\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 
                 TemplateBox[{
                  "\"An\"", "\" \"", "\"integral\"", "\" \"", "\"is\"", 
                   "\" \"", "\"a\"", "\" \"", "\"mathematical\"", "\" \"", 
                   "\"object\"", "\" \"", "\"that\"", "\" \"", "\"can\"", 
                   "\" \"", "\"be\"", "\" \"", "\"interpreted\"", "\" \"", 
                   "\"as\"", "\" \"", "\"an\"", "\" \"", "\"area\"", "\" \"", 
                   "\"or\"", "\" \"", "\"a\"", "\" \"", "\"generalization\"", 
                   "\" \"", "\"of\"", "\" \"", "\"area.\"", "\" \"", 
                   "\"Integrals\"", "\" \"", "\"and\"", "\" \"", 
                   "\"derivatives\"", "\" \"", "\"are\"", "\" \"", "\"the\"", 
                   "\" \"", "\"fundamental\"", "\" \"", "\"objects\"", 
                   "\" \"", "\"of\"", "\" \"", "\"calculus.\""}, 
                  "RowDefault"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{{Top}, {Bottom}}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {
                "Columns" -> None, "Rows" -> {{True}}, 
                 "ItemsIndexed" -> {{{1, -1}, {1, -1}} -> None}}, 
               GridBoxItemSize -> {"Columns" -> {Automatic}}, 
               GridBoxSpacings -> {"Columns" -> {0.6, 0}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Detailed definition", "scanner" -> "Data", "id" -> 
     "DefinitionPod:MathWorldData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"MathWorld\", \"Integral\"][EntityProperty[\"MathWorld\", \
\"TypesetDescription\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                Cell[
                 
                 TextData[{
                  "The term \[OpenCurlyDoubleQuote]integral\
\[CloseCurlyDoubleQuote] can refer to a number of different concepts in \
mathematics. The most common meaning is the the fundamenetal object of \
calculus corresponding to summing infinitesimal pieces to find the content of \
a continuous region. Other uses of \[OpenCurlyDoubleQuote]integral\
\[CloseCurlyDoubleQuote] include values that always take on integer values \
(e.g., integral drawing, integral graph), mathematical objects for which \
integers form basic examples (e.g., integral domain), and particular values \
of an equation (e.g., integral curve), "}], LineSpacing -> {1, 3}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              BaseStyle -> {AutoMultiplicationSymbol -> False}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemStyle -> {"Columns" -> {{
                   Directive[SpanMaxSize -> DirectedInfinity[1]]}}, 
                "Rows" -> {{
                   Directive[SpanMaxSize -> DirectedInfinity[1]]}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More details", "input" -> 
         "DefinitionPod:MathWorldData__More details"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Integral.html", "text" -> 
           "More information"}, {}]}]}]}], Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Related terms", "scanner" -> "Data", "id" -> 
     "RelatedTermsPod:MathWorldData", "position" -> "600", "error" -> "false",
      "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"MathWorld\", \"Integral\"][EntityProperty[\"MathWorld\", \
\"RelatedEntries\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"Abelian integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "AbelianIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"A\[Hyphen]integrable\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "A-Integrable"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"calculus\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "Calculus"}]], Identity],
                 TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Chebyshev\[Hyphen]Gauss quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "Chebyshev-GaussQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Chebyshev quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "ChebyshevQuadrature"}]],
                  Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Darboux integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "DarbouxIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"definite integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "DefiniteIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Denjoy integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "DenjoyIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"derivative\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "Derivative"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"differential geometry\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "DifferentialGeometry"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"differential k\[Hyphen]form\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "Differentialk-Form"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"double integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "DoubleIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Euler integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "EulerIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"form integration\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "FormIntegration"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"fundamental theorem of Gaussian quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, 
                    "FundamentalTheoremofGaussianQuadrature"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Gaussian quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "GaussianQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Gauss\[Hyphen]Jacobi mechanical quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, 
                    "Gauss-JacobiMechanicalQuadrature"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Haar integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "HaarIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Hermite\[Hyphen]Gauss quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "Hermite-GaussQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"indefinite integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "IndefiniteIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"integral calculus\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "IntegralCalculus"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"integration\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "Integration"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Jacobi\[Hyphen]Gauss quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "Jacobi-GaussQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Laguerre\[Hyphen]Gauss quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "Laguerre-GaussQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Lebesgue integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "LebesgueIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Lebesgue\[Hyphen]Stieltjes integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "Lebesgue-StieltjesIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Legendre\[Hyphen]Gauss quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "Legendre-GaussQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Leibniz integral rule\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "LeibnizIntegralRule"}]],
                  Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Lobatto quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "LobattoQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"multiple integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "MultipleIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"nested function\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "NestedFunction"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Newton\[Hyphen]Cotes formulas\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "Newton-CotesFormulas"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"numerical integration\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, "NumericalIntegration"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Perron integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "PerronIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "Quadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Radau quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "RadauQuadrature"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"recursive monotone stable quadrature\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {
                    Global`MathWorldData, 
                    "RecursiveMonotoneStableQuadrature"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"repeated integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "RepeatedIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Riemann integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "RiemannIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Romberg integration\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "RombergIntegration"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"singular integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "SingularIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Stieltjes integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "StieltjesIntegral"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Stokes\[CloseCurlyQuote] theorem\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "StokesTheorem"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"triple integral\"", 
                  Global`TagBoxWrapper[
                  "Entity" -> {Global`MathWorldData, "TripleIntegral"}]], 
                 Identity], TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Educational grade level", "scanner" -> "Data", "id" -> 
     "EducationPod:MathWorldData", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TagBox[
               TagBox["\"college level\"", 
                Global`TagBoxWrapper[
                "EntityClass" -> {Global`MathWorldData, "CollegeLevel"}]], 
               Identity], "\" \"", 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{
                   TagBox[
                    TagBox["\"AP calculus AB\"", 
                    Global`TagBoxWrapper[
                    "EntityClass" -> {Global`MathWorldData, "APCalculusAB"}]],
                     Identity], "\"\[NoBreak], \"", 
                   TagBox[
                    TagBox["\"California calculus standard\"", 
                    Global`TagBoxWrapper[
                    "EntityClass" -> {
                    Global`MathWorldData, "CaliforniaCalculus"}]], Identity]},
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Subject classifications", "scanner" -> "Data", "id" -> 
     "SubjectPod:MathWorldData", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> "MathWorld"}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"MathWorld\", \"Integral\"][EntityProperty[\"MathWorld\", \
\"MathWorldSubject\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                 "Calculus and Analysis > Calculus > Integrals > Definite \
Integrals"], 
                 TextCell[
                 "Calculus and Analysis > Calculus > Integrals > Definite \
Integrals"]]}, {
                InterpretationBox[
                 Cell[
                 "Calculus and Analysis > Calculus > Integrals > Indefinite \
Integrals"], 
                 TextCell[
                 "Calculus and Analysis > Calculus > Integrals > Indefinite \
Integrals"]]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, BaseStyle -> 
              Directive[FontFamily -> "Helvetica", 10], DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide details", "input" -> 
         "SubjectPod:MathWorldData__Hide details"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "integral", "template" -> 
        "Assuming \"integral\" is referring to a mathematical \
definition${separator}Use as ${desc} or ${desc} or ${desc} or ${desc} or \
${desc} instead", "count" -> "6", "pulldown" -> "false", "default" -> 
        "{\"C\", \"integral\"} -> {\"MathWorld\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "MathWorld", "desc" -> 
          " referring to a mathematical definition", "input" -> 
          "{\"C\", \"integral\"} -> {\"MathWorld\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Calculator", "desc" -> "a computation", "input" -> 
          "{\"C\", \"integral\"} -> {\"Calculator\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "ExamplePage", "desc" -> "a general topic", "input" -> 
          "{\"C\", \"integral\"} -> {\"ExamplePage\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Character", "desc" -> "a character", "input" -> 
          "{\"C\", \"integral\"} -> {\"Character\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "{\"C\", \"integral\"} -> {\"Word\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "NetworkService", "desc" -> "a network service", "input" -> 
          "{\"C\", \"integral\"} -> {\"NetworkService\"}"}, {}]}]}], 
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "integral", "score" -> "0.07476635514018691", "level" -> 
        "low"}, {}]}]}, Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[
   True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "8", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "10.145", 
    "parsetiming" -> "0.14300000000000002", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSP50471i0d656eeh8f94hf000010368b1dfad6f46b", "host" -> 
    "https://www5a.wolframalpha.com", "server" -> "28", "related" -> "", 
    "version" -> "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -8., 
    "Date" -> {2021, 1, 5, 9, 42, 31.8017509`9.25502593607761}, "Line" -> 16, 
    "SessionID" -> 24265935231607062295}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6, 7, 8}, Typeset`failedpods$$ = {2}, Typeset`chosen$$ = {
   "RelatedTermsPod:MathWorldData", "Related terms", 1, 1, "Content"}, 
   Typeset`open$$ = True, Typeset`newq$$ = 
   "graph [Integral of F(Asubb,Xsubl)sub-i]+[F(Asubb,Xsubl)sub0] + [Integral \
of F(Asubb,Xsubl)sub|i|]=(Fsub*)=y"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{560., {1413., 17.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[13]:=",ExpressionUUID->"0538555b-330e-4c89-90dc-800155577449"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"f", 
       RowBox[{"(", 
        RowBox[{"x", ",", "y", ",", "z"}], ")"}]}], ")"}], " ", "x"}], " ", 
    "=", " ", "asubn"}]}], ",", " ", 
  RowBox[{"y", " ", "=", " ", 
   RowBox[{"x", " ", "subl"}]}], ",", " ", 
  RowBox[{"z", "=", "i"}]}], "\[IndentingNewLine]", 
 RowBox[{"graph", " ", "y"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.81885801925661*^9, 
  3.8188580969850693`*^9}},ExpressionUUID->"1469b03d-1e17-454d-a2ac-\
a40a4f75c573"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"f", 
       RowBox[{"(", 
        RowBox[{"x", ",", "y", ",", "z"}], ")"}]}], ")"}], " ", "x"}], " ", 
    "=", " ", "asubn"}]}], ",", " ", 
  RowBox[{"y", " ", "=", " ", 
   RowBox[{"x", " ", "subl"}]}], ",", " ", 
  RowBox[{"z", "=", "i"}]}], "\[IndentingNewLine]", 
 RowBox[{"graph", " ", "y"}]}], "Input",
 CellChangeTimes->{{3.8188572271321115`*^9, 3.8188572710270576`*^9}, {
  3.818858108298458*^9, 3.818858112824458*^9}},
 EmphasizeSyntaxErrors->True,
 NumberMarks->False,
 CellLabel->"In[3]:=",ExpressionUUID->"560c8050-f882-4a0f-bf94-8c229eacb6ed"],

Cell[BoxData[
 TemplateBox[{
  "Syntax", "tsntxi", 
   "\"\\\"\\!\\(\\*RowBox[{RowBox[{\\\"y\\\", \\\"=\\\", \
RowBox[{RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"f\\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\", \\\",\\\", \\\"z\\\"}], \
\\\")\\\"}]}], \\\")\\\"}], \\\"x\\\"}], \\\"=\\\", \\\"asubn\\\"}]}], \
\\\",\\\", RowBox[{\\\"y\\\", \\\"=\\\", RowBox[{\\\"x\\\", \\\"subl\\\"}]}], \
\\\",\\\", RowBox[{\\\"z\\\", \\\"=\\\", \\\"i\\\"}]}]\\)\\\" is incomplete; \
more input is needed.\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\"\\\"}]\\)\"", 2, 3, 
   6, 24265953758020644214, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.818858366519264*^9, 3.8188583805835824`*^9}},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"d7a982e2-6ddc-4efb-ae19-b39e6b9e2d9c"]
}, Open  ]],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$3412#1"]& ]}, 
    InsetBox["\[IndentingNewLine]", Scaled[{0.5, 0.5}], Center]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{0.5, 0.5}, {0.5, 0.5}},
   ImageSize->{398.2574275274956, Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-27.48893571891069, 27.48893571891069}, {-1.1111107042952502`,
     1.1111034044848602`}},
   PlotRangeClipping->True,
   PlotRangePadding->Automatic,
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.8188581947024975`*^9, 
  3.818858228616186*^9}},ExpressionUUID->"c96525d9-2689-4e7f-ab1e-\
a93fcbc91014"]
},
WindowSize->{1142.7, 524.4},
WindowMargins->{{21.3, Automatic}, {Automatic, 30.599999999999998`}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"966809f8-6a4f-4cd7-8075-784b07963ded"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1432, 36, 124, "Input",ExpressionUUID->"47e117c9-76d7-4115-8cfb-b92bb124d269"],
Cell[1993, 58, 439, 10, 62, "WolframAlphaShort",ExpressionUUID->"2a430a74-8854-4d89-95e3-42be11ddb5e8"],
Cell[2435, 70, 2520, 71, 65, "WolframAlphaShortInput",ExpressionUUID->"9a8b2441-9819-443d-b3e3-c6d6afb4e664"],
Cell[CellGroupData[{
Cell[4980, 145, 1141, 23, 52, "DeployedNLInput",ExpressionUUID->"9d3e9ec0-b878-4f58-992c-f2adddf6b425"],
Cell[6124, 170, 642, 16, 35, "DeployedWLInput",ExpressionUUID->"09191f3a-288a-44e7-8269-7006b51406ac"]
}, Open  ]],
Cell[6781, 189, 201, 4, 28, "Input",ExpressionUUID->"df7e7a3a-ca3d-43f8-b3d0-16e259df2dfd"],
Cell[6985, 195, 46683, 985, 1447, "WolframAlphaShortInput",ExpressionUUID->"0538555b-330e-4c89-90dc-800155577449"],
Cell[53671, 1182, 564, 16, 67, InheritFromParent,ExpressionUUID->"1469b03d-1e17-454d-a2ac-a40a4f75c573"],
Cell[CellGroupData[{
Cell[54260, 1202, 662, 18, 48, "Input",ExpressionUUID->"560c8050-f882-4a0f-bf94-8c229eacb6ed"],
Cell[54925, 1222, 814, 15, 24, "Message",ExpressionUUID->"d7a982e2-6ddc-4efb-ae19-b39e6b9e2d9c"]
}, Open  ]],
Cell[55754, 1240, 34243, 578, 259, InheritFromParent,ExpressionUUID->"c96525d9-2689-4e7f-ab1e-a93fcbc91014"]
}
]
*)

